Problem Type: (Medium)

215. Kth Largest Element in an Array


Link: https://leetcode.com/problems/kth-largest-element-in-an-array/description/

---------------------------------------------------------------------------------------------------
Solution:
-------------------------------------

# Approach

C++ 
---------------------------------------

# Complexity

Method 1: Quick Select  

T.C= O(n^2) in worst case
in Average O(n)

S.C= O(n) recursive stack.


*******************Code****************** IN C++......................

class Solution {
public:
int partition(vector<int>& nums,int low,int high)
{
    int i=low;
    for(int j=low;j<high;j++)
    {
        if(nums[j]<=nums[high])
        {
            swap(nums[i],nums[j]);
            i++;
        }
    }
    swap(nums[i],nums[high]);
    return i;
}
int quickSelect(vector<int>& nums,int low,int high, int k)
{
    if(low>high)
    return -1;
    int pivot=partition(nums,low,high);
    if(pivot+1==k)
    return nums[pivot];
    else if(pivot+1>k)
    return quickSelect(nums,low,pivot-1,k);
    else
    return quickSelect(nums,pivot+1,high,k);
    return -1;
}
    int findKthLargest(vector<int>& nums, int k) {
        int n=nums.size();
        return quickSelect(nums,0,n-1,n-k+1);
    }
};