Problem Type: (Medium)

86. Partition List


Link: https://leetcode.com/problems/partition-list/description/

---------------------------------------------------------------------------------------------------
Solution:
-------------------------------------

# Approach

C++ Traversal 2 Pointer
---------------------------------------

# Complexity

Method 1: Traversal 2 Pointer 

T.C= O(n) 

S.C= O(1)


*******************Code****************** IN C++......................

class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        ListNode* dummy1=new ListNode(-1);
        ListNode* dummy2=new ListNode(-1);
        ListNode* p1=dummy1;
        ListNode* p2=dummy2;
        ListNode* p3=head;
        while(p3)
        {
            if(p3->val<x)
            {
                p1->next=p3;
                p1=p1->next;
            }
            else
            {
                p2->next=p3;
                p2=p2->next;
            }
            p3=p3->next;
        }
        p1->next=dummy2->next;
        p2->next=NULL;
        return dummy1->next;
    }
};