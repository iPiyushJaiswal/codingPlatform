Problem Type: (Medium)

2616. Minimize the Maximum Difference of Pairs


Link: https://leetcode.com/problems/minimize-the-maximum-difference-of-pairs/description/

---------------------------------------------------------------------------------------------------
Solution:
-------------------------------------

# Approach

C++ Binary Search
---------------------------------------

# Complexity

- Time complexity:
Method : Binary Search 

T.C=O(n*log(high)) + O(nlogn) sorting

-Space complexity:

S.C= O(1)

*******************Code****************** IN C++......................

class Solution {
public:
int findPair(vector<int>&nums,int mid,int n)
{
    int pair=0;
    for(int i=1;i<n;i++)
    {
        if(nums[i]-nums[i-1]<=mid)
        {
            pair++;
            i++;
        }
    }
    return pair;
}
    int minimizeMax(vector<int>& nums, int p) {
        if(p==0)
        return 0;
        sort(nums.begin(),nums.end());
        int n=nums.size();
        int low=0;
        int high=nums[n-1]-nums[0];
        int ans=-1;
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            int count=findPair(nums,mid,n);
            if(count>=p)
            {
                ans=mid;
                high=mid-1;
            }
            else
            low=mid+1;
        }
        return ans;
    }
};