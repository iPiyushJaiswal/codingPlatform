Problem GFG (Hard)
Merge Without Extra Space

Question link: https://practice.geeksforgeeks.org/problems/merge-two-sorted-arrays-1587115620/1


Code: In C++:
Complexity: 

Method 1: 
T.C= min(n,m) + (nlogn) + (mlogm)
S.C=O(1)

Method 2: 
T.C= (n+m)log(n+m)
S.C=O(1)

----------------
CODE IN C++ 
---------------- 
------------------------------------------------------------------------------------------------
Method 1: pointer at last index of first array and pointer at start index of second array.

void merge(long long arr1[], long long arr2[], int n, int m) 
        { 
            // code here 
            long long i=n-1;
            long long j=0;
            while(i>=0 && j<m)
            {
                if(arr1[i]>arr2[j])
                {
                    swap(arr1[i],arr2[j]);
                    i--;
                    j++;
                }
                else
                break;
            }
            sort(arr1,arr1+n);
            sort(arr2,arr2+m);
        } 
		
-----------------------------------------------------------------------------------------------------

Method 2: Gap Method:

void swapFun(long long x[],int low,long long y[],int high)
        {
            if(x[low]>y[high])
            swap(x[low],y[high]);
        }
        void merge(long long arr1[], long long arr2[], int n, int m) 
        { 
            // code here 
            int low=0;
            int high=0;
            int total=n+m-1;
            int gap=total/2 +total%2;
            while(gap>0)
            {
                low=0;
                high=gap;
                while(high<=total)
                {
                    if(low<n && high>=n)
                    swapFun(arr1,low,arr2,high-n);
                    else if(low<n && high<n)
                    swapFun(arr1,low,arr1,high);
                    else
                    swapFun(arr2,low-n,arr2,high-n);
                    low++;
                    high++;
                }
                if(gap==1)
                break;
                gap=gap/2 + gap%2;
            }
        } 
