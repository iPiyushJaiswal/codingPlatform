Problem Type: (Medium)

435. Non-overlapping Intervals

Link: https://leetcode.com/problems/non-overlapping-intervals/description/


---------------------------------------------------------------------------------------------------

Solution:
-------------------------------------

#Complexity

Time complexity:
T.C= O(nlogn)sorting vector +O(n) traversing vector==>O(nlogn)

Space complexity:
S.C=O(1) no extra space.

--------------------------------------

*******************Code****************** IN C++......................

class Solution {
public:
static bool comp(vector<int>&a,vector<int>&b)
{
    if(a[1]==b[1])
    return a[0]<b[0];
    return a[1]<b[1];
}
    int eraseOverlapIntervals(vector<vector<int>>& intervals) {
        int n=intervals.size();
        int count=0;
        sort(intervals.begin(),intervals.end(),comp);
        int e=intervals[0][1];
        for(int i=1;i<n;i++)
        {
            if(intervals[i][0]<e)
                count++;
            else
                e=intervals[i][1];
        }
        return count;
    }
};